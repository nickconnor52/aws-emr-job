/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.superh.awsemr.spike.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FDAProduct extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FDAProduct\",\"namespace\":\"com.superh.awsemr.spike.avro\",\"fields\":[{\"name\":\"productNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"applNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"form\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"strength\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"referenceDrug\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"drugName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"activeIngredient\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String productNo;
  @Deprecated public java.lang.String applNo;
  @Deprecated public java.lang.String form;
  @Deprecated public java.lang.String strength;
  @Deprecated public java.lang.String referenceDrug;
  @Deprecated public java.lang.String drugName;
  @Deprecated public java.lang.String activeIngredient;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public FDAProduct() {}

  /**
   * All-args constructor.
   */
  public FDAProduct(java.lang.String productNo, java.lang.String applNo, java.lang.String form, java.lang.String strength, java.lang.String referenceDrug, java.lang.String drugName, java.lang.String activeIngredient) {
    this.productNo = productNo;
    this.applNo = applNo;
    this.form = form;
    this.strength = strength;
    this.referenceDrug = referenceDrug;
    this.drugName = drugName;
    this.activeIngredient = activeIngredient;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return productNo;
    case 1: return applNo;
    case 2: return form;
    case 3: return strength;
    case 4: return referenceDrug;
    case 5: return drugName;
    case 6: return activeIngredient;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: productNo = (java.lang.String)value$; break;
    case 1: applNo = (java.lang.String)value$; break;
    case 2: form = (java.lang.String)value$; break;
    case 3: strength = (java.lang.String)value$; break;
    case 4: referenceDrug = (java.lang.String)value$; break;
    case 5: drugName = (java.lang.String)value$; break;
    case 6: activeIngredient = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'productNo' field.
   */
  public java.lang.String getProductNo() {
    return productNo;
  }

  /**
   * Sets the value of the 'productNo' field.
   * @param value the value to set.
   */
  public void setProductNo(java.lang.String value) {
    this.productNo = value;
  }

  /**
   * Gets the value of the 'applNo' field.
   */
  public java.lang.String getApplNo() {
    return applNo;
  }

  /**
   * Sets the value of the 'applNo' field.
   * @param value the value to set.
   */
  public void setApplNo(java.lang.String value) {
    this.applNo = value;
  }

  /**
   * Gets the value of the 'form' field.
   */
  public java.lang.String getForm() {
    return form;
  }

  /**
   * Sets the value of the 'form' field.
   * @param value the value to set.
   */
  public void setForm(java.lang.String value) {
    this.form = value;
  }

  /**
   * Gets the value of the 'strength' field.
   */
  public java.lang.String getStrength() {
    return strength;
  }

  /**
   * Sets the value of the 'strength' field.
   * @param value the value to set.
   */
  public void setStrength(java.lang.String value) {
    this.strength = value;
  }

  /**
   * Gets the value of the 'referenceDrug' field.
   */
  public java.lang.String getReferenceDrug() {
    return referenceDrug;
  }

  /**
   * Sets the value of the 'referenceDrug' field.
   * @param value the value to set.
   */
  public void setReferenceDrug(java.lang.String value) {
    this.referenceDrug = value;
  }

  /**
   * Gets the value of the 'drugName' field.
   */
  public java.lang.String getDrugName() {
    return drugName;
  }

  /**
   * Sets the value of the 'drugName' field.
   * @param value the value to set.
   */
  public void setDrugName(java.lang.String value) {
    this.drugName = value;
  }

  /**
   * Gets the value of the 'activeIngredient' field.
   */
  public java.lang.String getActiveIngredient() {
    return activeIngredient;
  }

  /**
   * Sets the value of the 'activeIngredient' field.
   * @param value the value to set.
   */
  public void setActiveIngredient(java.lang.String value) {
    this.activeIngredient = value;
  }

  /** Creates a new FDAProduct RecordBuilder */
  public static com.superh.awsemr.spike.avro.FDAProduct.Builder newBuilder() {
    return new com.superh.awsemr.spike.avro.FDAProduct.Builder();
  }
  
  /** Creates a new FDAProduct RecordBuilder by copying an existing Builder */
  public static com.superh.awsemr.spike.avro.FDAProduct.Builder newBuilder(com.superh.awsemr.spike.avro.FDAProduct.Builder other) {
    return new com.superh.awsemr.spike.avro.FDAProduct.Builder(other);
  }
  
  /** Creates a new FDAProduct RecordBuilder by copying an existing FDAProduct instance */
  public static com.superh.awsemr.spike.avro.FDAProduct.Builder newBuilder(com.superh.awsemr.spike.avro.FDAProduct other) {
    return new com.superh.awsemr.spike.avro.FDAProduct.Builder(other);
  }
  
  /**
   * RecordBuilder for FDAProduct instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FDAProduct>
    implements org.apache.avro.data.RecordBuilder<FDAProduct> {

    private java.lang.String productNo;
    private java.lang.String applNo;
    private java.lang.String form;
    private java.lang.String strength;
    private java.lang.String referenceDrug;
    private java.lang.String drugName;
    private java.lang.String activeIngredient;

    /** Creates a new Builder */
    private Builder() {
      super(com.superh.awsemr.spike.avro.FDAProduct.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.superh.awsemr.spike.avro.FDAProduct.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.productNo)) {
        this.productNo = data().deepCopy(fields()[0].schema(), other.productNo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.applNo)) {
        this.applNo = data().deepCopy(fields()[1].schema(), other.applNo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.form)) {
        this.form = data().deepCopy(fields()[2].schema(), other.form);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.strength)) {
        this.strength = data().deepCopy(fields()[3].schema(), other.strength);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.referenceDrug)) {
        this.referenceDrug = data().deepCopy(fields()[4].schema(), other.referenceDrug);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.drugName)) {
        this.drugName = data().deepCopy(fields()[5].schema(), other.drugName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.activeIngredient)) {
        this.activeIngredient = data().deepCopy(fields()[6].schema(), other.activeIngredient);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing FDAProduct instance */
    private Builder(com.superh.awsemr.spike.avro.FDAProduct other) {
            super(com.superh.awsemr.spike.avro.FDAProduct.SCHEMA$);
      if (isValidValue(fields()[0], other.productNo)) {
        this.productNo = data().deepCopy(fields()[0].schema(), other.productNo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.applNo)) {
        this.applNo = data().deepCopy(fields()[1].schema(), other.applNo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.form)) {
        this.form = data().deepCopy(fields()[2].schema(), other.form);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.strength)) {
        this.strength = data().deepCopy(fields()[3].schema(), other.strength);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.referenceDrug)) {
        this.referenceDrug = data().deepCopy(fields()[4].schema(), other.referenceDrug);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.drugName)) {
        this.drugName = data().deepCopy(fields()[5].schema(), other.drugName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.activeIngredient)) {
        this.activeIngredient = data().deepCopy(fields()[6].schema(), other.activeIngredient);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'productNo' field */
    public java.lang.String getProductNo() {
      return productNo;
    }
    
    /** Sets the value of the 'productNo' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder setProductNo(java.lang.String value) {
      validate(fields()[0], value);
      this.productNo = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'productNo' field has been set */
    public boolean hasProductNo() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'productNo' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder clearProductNo() {
      productNo = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'applNo' field */
    public java.lang.String getApplNo() {
      return applNo;
    }
    
    /** Sets the value of the 'applNo' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder setApplNo(java.lang.String value) {
      validate(fields()[1], value);
      this.applNo = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'applNo' field has been set */
    public boolean hasApplNo() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'applNo' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder clearApplNo() {
      applNo = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'form' field */
    public java.lang.String getForm() {
      return form;
    }
    
    /** Sets the value of the 'form' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder setForm(java.lang.String value) {
      validate(fields()[2], value);
      this.form = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'form' field has been set */
    public boolean hasForm() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'form' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder clearForm() {
      form = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'strength' field */
    public java.lang.String getStrength() {
      return strength;
    }
    
    /** Sets the value of the 'strength' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder setStrength(java.lang.String value) {
      validate(fields()[3], value);
      this.strength = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'strength' field has been set */
    public boolean hasStrength() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'strength' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder clearStrength() {
      strength = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'referenceDrug' field */
    public java.lang.String getReferenceDrug() {
      return referenceDrug;
    }
    
    /** Sets the value of the 'referenceDrug' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder setReferenceDrug(java.lang.String value) {
      validate(fields()[4], value);
      this.referenceDrug = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'referenceDrug' field has been set */
    public boolean hasReferenceDrug() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'referenceDrug' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder clearReferenceDrug() {
      referenceDrug = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'drugName' field */
    public java.lang.String getDrugName() {
      return drugName;
    }
    
    /** Sets the value of the 'drugName' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder setDrugName(java.lang.String value) {
      validate(fields()[5], value);
      this.drugName = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'drugName' field has been set */
    public boolean hasDrugName() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'drugName' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder clearDrugName() {
      drugName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'activeIngredient' field */
    public java.lang.String getActiveIngredient() {
      return activeIngredient;
    }
    
    /** Sets the value of the 'activeIngredient' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder setActiveIngredient(java.lang.String value) {
      validate(fields()[6], value);
      this.activeIngredient = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'activeIngredient' field has been set */
    public boolean hasActiveIngredient() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'activeIngredient' field */
    public com.superh.awsemr.spike.avro.FDAProduct.Builder clearActiveIngredient() {
      activeIngredient = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public FDAProduct build() {
      try {
        FDAProduct record = new FDAProduct();
        record.productNo = fieldSetFlags()[0] ? this.productNo : (java.lang.String) defaultValue(fields()[0]);
        record.applNo = fieldSetFlags()[1] ? this.applNo : (java.lang.String) defaultValue(fields()[1]);
        record.form = fieldSetFlags()[2] ? this.form : (java.lang.String) defaultValue(fields()[2]);
        record.strength = fieldSetFlags()[3] ? this.strength : (java.lang.String) defaultValue(fields()[3]);
        record.referenceDrug = fieldSetFlags()[4] ? this.referenceDrug : (java.lang.String) defaultValue(fields()[4]);
        record.drugName = fieldSetFlags()[5] ? this.drugName : (java.lang.String) defaultValue(fields()[5]);
        record.activeIngredient = fieldSetFlags()[6] ? this.activeIngredient : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
