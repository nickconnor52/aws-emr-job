/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.superh.awsemr.spike.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FDAApplication extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FDAApplication\",\"namespace\":\"com.superh.awsemr.spike.avro\",\"fields\":[{\"name\":\"applNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"applType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"appPublicNotes\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"sponsorName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"products\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FDAProduct\",\"fields\":[{\"name\":\"productNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"applNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"form\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"strength\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"referenceDrug\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"drugName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"activeIngredient\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String applNo;
  @Deprecated public java.lang.String applType;
  @Deprecated public java.lang.String appPublicNotes;
  @Deprecated public java.lang.String sponsorName;
  @Deprecated public java.util.List<com.superh.awsemr.spike.avro.FDAProduct> products;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public FDAApplication() {}

  /**
   * All-args constructor.
   */
  public FDAApplication(java.lang.String applNo, java.lang.String applType, java.lang.String appPublicNotes, java.lang.String sponsorName, java.util.List<com.superh.awsemr.spike.avro.FDAProduct> products) {
    this.applNo = applNo;
    this.applType = applType;
    this.appPublicNotes = appPublicNotes;
    this.sponsorName = sponsorName;
    this.products = products;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return applNo;
    case 1: return applType;
    case 2: return appPublicNotes;
    case 3: return sponsorName;
    case 4: return products;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: applNo = (java.lang.String)value$; break;
    case 1: applType = (java.lang.String)value$; break;
    case 2: appPublicNotes = (java.lang.String)value$; break;
    case 3: sponsorName = (java.lang.String)value$; break;
    case 4: products = (java.util.List<com.superh.awsemr.spike.avro.FDAProduct>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'applNo' field.
   */
  public java.lang.String getApplNo() {
    return applNo;
  }

  /**
   * Sets the value of the 'applNo' field.
   * @param value the value to set.
   */
  public void setApplNo(java.lang.String value) {
    this.applNo = value;
  }

  /**
   * Gets the value of the 'applType' field.
   */
  public java.lang.String getApplType() {
    return applType;
  }

  /**
   * Sets the value of the 'applType' field.
   * @param value the value to set.
   */
  public void setApplType(java.lang.String value) {
    this.applType = value;
  }

  /**
   * Gets the value of the 'appPublicNotes' field.
   */
  public java.lang.String getAppPublicNotes() {
    return appPublicNotes;
  }

  /**
   * Sets the value of the 'appPublicNotes' field.
   * @param value the value to set.
   */
  public void setAppPublicNotes(java.lang.String value) {
    this.appPublicNotes = value;
  }

  /**
   * Gets the value of the 'sponsorName' field.
   */
  public java.lang.String getSponsorName() {
    return sponsorName;
  }

  /**
   * Sets the value of the 'sponsorName' field.
   * @param value the value to set.
   */
  public void setSponsorName(java.lang.String value) {
    this.sponsorName = value;
  }

  /**
   * Gets the value of the 'products' field.
   */
  public java.util.List<com.superh.awsemr.spike.avro.FDAProduct> getProducts() {
    return products;
  }

  /**
   * Sets the value of the 'products' field.
   * @param value the value to set.
   */
  public void setProducts(java.util.List<com.superh.awsemr.spike.avro.FDAProduct> value) {
    this.products = value;
  }

  /** Creates a new FDAApplication RecordBuilder */
  public static com.superh.awsemr.spike.avro.FDAApplication.Builder newBuilder() {
    return new com.superh.awsemr.spike.avro.FDAApplication.Builder();
  }
  
  /** Creates a new FDAApplication RecordBuilder by copying an existing Builder */
  public static com.superh.awsemr.spike.avro.FDAApplication.Builder newBuilder(com.superh.awsemr.spike.avro.FDAApplication.Builder other) {
    return new com.superh.awsemr.spike.avro.FDAApplication.Builder(other);
  }
  
  /** Creates a new FDAApplication RecordBuilder by copying an existing FDAApplication instance */
  public static com.superh.awsemr.spike.avro.FDAApplication.Builder newBuilder(com.superh.awsemr.spike.avro.FDAApplication other) {
    return new com.superh.awsemr.spike.avro.FDAApplication.Builder(other);
  }
  
  /**
   * RecordBuilder for FDAApplication instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FDAApplication>
    implements org.apache.avro.data.RecordBuilder<FDAApplication> {

    private java.lang.String applNo;
    private java.lang.String applType;
    private java.lang.String appPublicNotes;
    private java.lang.String sponsorName;
    private java.util.List<com.superh.awsemr.spike.avro.FDAProduct> products;

    /** Creates a new Builder */
    private Builder() {
      super(com.superh.awsemr.spike.avro.FDAApplication.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.superh.awsemr.spike.avro.FDAApplication.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.applNo)) {
        this.applNo = data().deepCopy(fields()[0].schema(), other.applNo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.applType)) {
        this.applType = data().deepCopy(fields()[1].schema(), other.applType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.appPublicNotes)) {
        this.appPublicNotes = data().deepCopy(fields()[2].schema(), other.appPublicNotes);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sponsorName)) {
        this.sponsorName = data().deepCopy(fields()[3].schema(), other.sponsorName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.products)) {
        this.products = data().deepCopy(fields()[4].schema(), other.products);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing FDAApplication instance */
    private Builder(com.superh.awsemr.spike.avro.FDAApplication other) {
            super(com.superh.awsemr.spike.avro.FDAApplication.SCHEMA$);
      if (isValidValue(fields()[0], other.applNo)) {
        this.applNo = data().deepCopy(fields()[0].schema(), other.applNo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.applType)) {
        this.applType = data().deepCopy(fields()[1].schema(), other.applType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.appPublicNotes)) {
        this.appPublicNotes = data().deepCopy(fields()[2].schema(), other.appPublicNotes);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sponsorName)) {
        this.sponsorName = data().deepCopy(fields()[3].schema(), other.sponsorName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.products)) {
        this.products = data().deepCopy(fields()[4].schema(), other.products);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'applNo' field */
    public java.lang.String getApplNo() {
      return applNo;
    }
    
    /** Sets the value of the 'applNo' field */
    public com.superh.awsemr.spike.avro.FDAApplication.Builder setApplNo(java.lang.String value) {
      validate(fields()[0], value);
      this.applNo = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'applNo' field has been set */
    public boolean hasApplNo() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'applNo' field */
    public com.superh.awsemr.spike.avro.FDAApplication.Builder clearApplNo() {
      applNo = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'applType' field */
    public java.lang.String getApplType() {
      return applType;
    }
    
    /** Sets the value of the 'applType' field */
    public com.superh.awsemr.spike.avro.FDAApplication.Builder setApplType(java.lang.String value) {
      validate(fields()[1], value);
      this.applType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'applType' field has been set */
    public boolean hasApplType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'applType' field */
    public com.superh.awsemr.spike.avro.FDAApplication.Builder clearApplType() {
      applType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'appPublicNotes' field */
    public java.lang.String getAppPublicNotes() {
      return appPublicNotes;
    }
    
    /** Sets the value of the 'appPublicNotes' field */
    public com.superh.awsemr.spike.avro.FDAApplication.Builder setAppPublicNotes(java.lang.String value) {
      validate(fields()[2], value);
      this.appPublicNotes = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'appPublicNotes' field has been set */
    public boolean hasAppPublicNotes() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'appPublicNotes' field */
    public com.superh.awsemr.spike.avro.FDAApplication.Builder clearAppPublicNotes() {
      appPublicNotes = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'sponsorName' field */
    public java.lang.String getSponsorName() {
      return sponsorName;
    }
    
    /** Sets the value of the 'sponsorName' field */
    public com.superh.awsemr.spike.avro.FDAApplication.Builder setSponsorName(java.lang.String value) {
      validate(fields()[3], value);
      this.sponsorName = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'sponsorName' field has been set */
    public boolean hasSponsorName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'sponsorName' field */
    public com.superh.awsemr.spike.avro.FDAApplication.Builder clearSponsorName() {
      sponsorName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'products' field */
    public java.util.List<com.superh.awsemr.spike.avro.FDAProduct> getProducts() {
      return products;
    }
    
    /** Sets the value of the 'products' field */
    public com.superh.awsemr.spike.avro.FDAApplication.Builder setProducts(java.util.List<com.superh.awsemr.spike.avro.FDAProduct> value) {
      validate(fields()[4], value);
      this.products = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'products' field has been set */
    public boolean hasProducts() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'products' field */
    public com.superh.awsemr.spike.avro.FDAApplication.Builder clearProducts() {
      products = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public FDAApplication build() {
      try {
        FDAApplication record = new FDAApplication();
        record.applNo = fieldSetFlags()[0] ? this.applNo : (java.lang.String) defaultValue(fields()[0]);
        record.applType = fieldSetFlags()[1] ? this.applType : (java.lang.String) defaultValue(fields()[1]);
        record.appPublicNotes = fieldSetFlags()[2] ? this.appPublicNotes : (java.lang.String) defaultValue(fields()[2]);
        record.sponsorName = fieldSetFlags()[3] ? this.sponsorName : (java.lang.String) defaultValue(fields()[3]);
        record.products = fieldSetFlags()[4] ? this.products : (java.util.List<com.superh.awsemr.spike.avro.FDAProduct>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
